![image.png](https://pic.leetcode-cn.com/1632882897-owFNIb-image.png)
抽象图一二ij
关键是通过各种各样的方法将i和j跳跃前进，而不是逐步前进，达到On

* 

```
class Solution {
public:
    string lastSubstring(string s) {
        string ans=string(s[0],1);
        int i=0,j=1,n=s.size();
        while(j<n){
            if(s[j]>s[i])i=j;
            else if(s[j]==s[i]){
                bool flag=false;
                int off;
                for(off=1;i+off<j;off++){
                    if(s[i+off]<s[j+off]){
                        i=j;
                        flag=true;
                        break;
                    }else if(s[i+off]>s[j+off]){
                        j+=off;
                        flag=true;
                        break;
                    }
                }
                if(flag==false){
                    j+=off;
                    continue;
                }
            }
            j++;
        }
        return s.substr(i);
    }
};
```

